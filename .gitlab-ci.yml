stages:
  - maven-package
  - liquibase-update
  - kaniko-build
  - helm-package


variables:
  MAVEN_CLI_OPTS: "--no-transfer-progress"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -DproxySet=true -DproxyHost=chckproxy.raiffeisenbank.com.ua -DproxyPort=8080"
  HTTP_PROXY: http://chckproxy.raiffeisenbank.com.ua:8080
  NO_PROXY: "otpbank.com.ua,raiffeisenbank.com.ua,localhost"
  COMMIT_HASH_TAIL: "-$CI_COMMIT_SHORT_SHA"
  CI_NEW_RELEASES_BRANCH: new_releases


.default-rules: &default-rules
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_NEW_RELEASES_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      variables:
        COMMIT_HASH_TAIL: ""
    - if: $CI_JOB_NAME == "maven-package"
      when: manual
    - when: on_success

maven-package:
  stage: maven-package
  image: openjdk:11
  <<: *default-rules
  before_script:
    - echo -n "$SSL_CHAIN" | base64 -d > /usr/local/share/ca-certificates/cert.crt && update-ca-certificates
    - keytool -importcert -file /usr/local/share/ca-certificates/cert.crt -alias ca_certs -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt
    - 'echo "cafile: \"/usr/local/share/ca-certificates/cert.crt\"" > ~/.yarnrc'
    - chmod +x mvnw
  script:
    - echo "PARENT_VERSION=$(./mvnw --non-recursive help:evaluate -Dexpression=project.version | grep -v '\[.*' | tail -1 | cut -d'-' -f1)$COMMIT_HASH_TAIL" >> parent.env
    - ./mvnw $MAVEN_CLI_OPTS clean package -DskipTests
  cache:
    paths:
      - .m2/repository
    key: $CI_BUILD_REF_NAME
  artifacts:
    reports:
      dotenv: parent.env
    paths:
      - downloader/target/*.jar
      - importer/target/*.jar
      - notification/target/*.jar
      - scheduler/target/*.jar
      - scheduler_test/target/*.jar
      - web/target/*.jar


liquibase-update:
  stage: liquibase-update
  image: openjdk:11
  before_script:
    - echo -n "$SSL_CHAIN" | base64 -d > /usr/local/share/ca-certificates/cert.crt && update-ca-certificates
    - keytool -importcert -file /usr/local/share/ca-certificates/cert.crt -alias ca_certs -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt
    - 'echo "cafile: \"/usr/local/share/ca-certificates/cert.crt\"" > ~/.yarnrc'
    - chmod +x mvnw
  script:
    - ./mvnw $MAVEN_CLI_OPTS clean install -pl db --also-make -DskipTests
    - cd db
    - ../mvnw $MAVEN_CLI_OPTS liquibase:update -Dliquibase.url="jdbc:postgresql://antifrauddbdev.raiffeisenbank.com.ua:5432/otp?sslmode=require"
  when: manual


kaniko-build:
  stage: kaniko-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - maven-package
  <<: *default-rules
  before_script:
    - echo "{\"auths\":{\"$NEXUS_IMAGE_REPO\":{\"auth\":\"$(printf "%s:%s" "$NEXUS_USER" "$NEXUS_PASS" | base64 | tr -d '\n')\"}}}" >> /kaniko/.docker/config.json
    - echo "{\"proxies\":{\"default\":{\"httpProxy\":\"$HTTP_PROXY\",\"httpsProxy\":\"$HTTP_PROXY\",\"noProxy\":\"$NO_PROXY\"}}}"  >> /kaniko/.docker/config.json
    - echo -n "$SSL_CHAIN" | base64 -d >> /kaniko/ssl/certs/ca-certificates.crt
  script:
    - >-
      for file in $(find . -type f -regex '.*target/.*\.jar'); do
        echo $file
        app_name=$(echo $file | rev | cut -d'/' -f1 | rev | cut -d'-' -f1 | tr -d _)
        version=$(echo $file | rev | cut -d'/' -f1 | rev | cut -d'-' -f2)$COMMIT_HASH_TAIL
        /kaniko/executor \
        --context . \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination "$NEXUS_IMAGE_REPO/$app_name:$version" \
        --build-arg JAR_FILE=$file \
        --build-arg http_proxy=$HTTP_PROXY \
        --build-arg https_proxy=$HTTPS_PROXY || continue
        echo "Image $app_name:$version pushed!"
      done


liquibase-build:
  stage: kaniko-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - maven-package
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_NEW_RELEASES_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      changes:
        - db/src/main/resources/changelog/*
        - Dockerfile-liquibase
      variables:
        COMMIT_HASH_TAIL: ""
    - when: on_success
  before_script:
    - echo "{\"auths\":{\"$NEXUS_IMAGE_REPO\":{\"auth\":\"$(printf "%s:%s" "$NEXUS_USER" "$NEXUS_PASS" | base64 | tr -d '\n')\"}}}" >> /kaniko/.docker/config.json
    - echo "{\"proxies\":{\"default\":{\"httpProxy\":\"$HTTP_PROXY\",\"httpsProxy\":\"$HTTP_PROXY\",\"noProxy\":\"$NO_PROXY\"}}}"  >> /kaniko/.docker/config.json
    - echo -n "$SSL_CHAIN" | base64 -d >> /kaniko/ssl/certs/ca-certificates.crt
  script:
    - >-
      /kaniko/executor 
      --context . 
      --dockerfile $CI_PROJECT_DIR/Dockerfile-liquibase 
      --destination "$NEXUS_IMAGE_REPO/liquibase:$PARENT_VERSION" 
      --build-arg http_proxy=$HTTP_PROXY 
      --build-arg https_proxy=$HTTPS_PROXY
    - echo "Image liquibase:$PARENT_VERSION pushed!"


helm-package:
  stage: helm-package
  image: nexus.otpbank.com.ua:10443/repository/tools/helm-kubectl:3.3.1
  needs:
    - maven-package
  <<: *default-rules
  script:
    - >-
      for file in $(find . -type f -regex '.*target/.*\.jar'); do
        echo $file
        app_name=$(echo $file | rev | cut -d'/' -f1 | rev | cut -d'-' -f1 | tr -d _)
        version=$(echo $file | rev | cut -d'/' -f1 | rev | cut -d'-' -f2)$COMMIT_HASH_TAIL
        sed -i "s/$app_name: version/$app_name: $version/g" $CI_PROJECT_DIR/helm/antifraud/values.yaml
        helm package $CI_PROJECT_DIR/helm/services/$app_name --app-version $version --version $version
        find . -name $app_name*.tgz -exec curl -s -u $NEXUS_USER:$NEXUS_PASS $NEXUS_HELM_REPO --upload-file {} \;
        echo "Helm chart $app_name:$version pushed!"
      done
    - helm package $CI_PROJECT_DIR/helm/services/liquibase --app-version $PARENT_VERSION --version $PARENT_VERSION
    - find . -name liquibase*.tgz -exec curl -s -u $NEXUS_USER:$NEXUS_PASS $NEXUS_HELM_REPO --upload-file {} \;
    - echo "Helm chart liquibase:$PARENT_VERSION pushed!"
    - 'sed -i "s/liquibase: version/liquibase: $PARENT_VERSION/g" $CI_PROJECT_DIR/helm/antifraud/values.yaml'
    - helm package $CI_PROJECT_DIR/helm/antifraud --version $PARENT_VERSION
    - find . -name antifraud*.tgz -exec curl -s -u $NEXUS_USER:$NEXUS_PASS $NEXUS_HELM_REPO --upload-file {} \;
    - echo "Helm chart antifraud:$PARENT_VERSION pushed!"